proc geSetNormalVertex(string $vtxSrc[], string $vtxDst[], float $eps, float $para){
	// para = 1: keep normal of selected vertexes
	// para = 2: keep normal of selected mesh
	// para = 3: average normal 
	string $closestVert ;
	for ($i=0;$i<size($vtxDst);$i++)
	{
	    $normalVerti = `polyNormalPerVertex -q -xyz $vtxDst[$i]`; 
		float $shortestDistance = 1000000;
		
		//select $vtxDst[$i];
		float $vPos[] = `xform -q -ws -t $vtxDst[$i]`;
					
		for ($j=0;$j<size($vtxSrc);$j++)
		{
			float $testVert[] = `xform -q -ws -t $vtxSrc[$j]`;
			float $testLength = ((($testVert[0] - $vPos[0])*($testVert[0] - $vPos[0])) + (($testVert[1] - $vPos[1])*($testVert[1] - $vPos[1])) + (($testVert[2] - $vPos[2])*($testVert[2] - $vPos[2])));
			
			if ($testLength < $shortestDistance)
			{
				$closestVert = $vtxSrc[$j];
				$shortestDistance = $testLength;
			}
			
		}
		if ($shortestDistance < $eps){
			if ($para == 1)
			{
				polyNormalPerVertex -xyz $normalVerti[0] $normalVerti[1] $normalVerti[2] $closestVert;
			}
			
			if ($para == 2)
			{
				$normalVertj = `polyNormalPerVertex -q -xyz $closestVert`;
				polyNormalPerVertex -xyz $normalVertj[0] $normalVertj[1] $normalVertj[2] $vtxDst[$i];
			}
		
			if ($para == 3)
			{
		    	float $averageNormal[];
				//float $posSrc[] = `xform -q -ws -t $closestVert`;
				//xform -ws -t $posSrc[0] $posSrc[1] $posSrc[2] $vtxDst[$i];
				// set normal average for closet vertexes
				$normalVertj = `polyNormalPerVertex -q -xyz $closestVert`;
				$averageNormal[0] = ($normalVerti[0] + $normalVertj[0])/2;
				$averageNormal[1] = ($normalVerti[1] + $normalVertj[1])/2;
				$averageNormal[2] = ($normalVerti[2] + $normalVertj[2])/2;
				// set vertex normal back to
				polyNormalPerVertex -xyz $averageNormal[0] $averageNormal[1] $averageNormal[2] $vtxDst[$i];
				polyNormalPerVertex -xyz $averageNormal[0] $averageNormal[1] $averageNormal[2] $closestVert;
			}
		}
	}
}
global proc geSnapToTheOtherObject(float $params, string $side){
	//float $eps = `textField -q -text lnThreshole` ;
	float $eps = $params;
	string $sel[] = `ls -sl -l -fl`; select -cl;
	string $vtSel[], $vtSrc[];
	for ($i=0;$i<(size($sel) - 1);$i++)
	{
		$vtSel[$i] = $sel[$i];
	}
	select $sel[size($sel)-1];
	ConvertSelectionToVertices;
	$vtSrc = `ls -sl -fl -l`;
	geSetNormalVertex($vtSrc, $vtSel, $eps, $side);
}
global proc geSnapToObjectItself(float $params, string $side){
	string $vtSel[] = `ls -l -fl -sl`;
	string $objSel[] = `ls -l -hilite` ;
	select -cl;
	select $objSel[0] ;
	ConvertSelectionToVertices ;
	string $vtSrc[] = `ls -l -fl -sl`;
	select -cl ;
	$vtSrc = stringArrayRemove($vtSel, $vtSrc);
	float $eps = $params;
	geSetNormalVertex($vtSrc, $vtSel, $eps, $side);
}


