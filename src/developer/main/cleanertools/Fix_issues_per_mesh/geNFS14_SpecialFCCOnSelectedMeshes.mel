
proc string ge_forceCleanUpByCombine( string $clnList[] )
{
    // This procedure was copied from EA script.
	int $listSize = size($clnList);
	global string $combineResult = "fault";
	if ($listSize > 0)
	{
		string $parent[] = `listRelatives -fullPath -parent $clnList[0]`;
		global string $combineResult;
		string $firstName = `match "[^|]*$" $clnList[0]`;
		
		string $proxyCube[] = `polyCube -ch off -o on -w 1 -h 1 -d 1 -cuv 4`;
		
		string $group = `group -n "vutGroup#" $clnList $proxyCube`;
		
		//string $combined[] = `polyUnite -ch off $group`;
		string $combined[] = `evalEcho("polyUnite -ch off \""+$group+"\"")`;
		
		string $faceToVertex[] = `polyInfo -faceToVertex`;
		int $sizeFaces = size($faceToVertex);
		
		int $start = $sizeFaces - 6;
		int $end = $sizeFaces - 1;
		
		string $deletePart = $combined[0] + ".f[" + $start + ":" + $end + "]";
		delete $deletePart;
		
		$combineResult = `rename $combined[0] $firstName`;
		delete -ch $combineResult;
		if($parent[0] != "")
		{		
			parent $combineResult $parent[0];
		}
	}
	else
	{
		error "Nothing to combine.";
	}

	return $combineResult;
}

global proc geNFS14_SpecialFCCOnSelectedMeshes ()
{
    print ("DOING Special FCC.\n") ;
    
    string $slObjects[] = `ls -sl` ;
    for ($anO in $slObjects){
        string $meshName[] = `listRelatives -f -type mesh -c $anO` ;
        string $transTmp[] ;
        if (size($meshName) == 1){
            $transTmp[0] = $anO ;
            ge_forceCleanUpByCombine($transTmp) ;
        }else{
            print("Something is wrong with " + $anO + "\n");
        }
    }
    
    print ("-----'Special FCC On Selected Meshes' DONE-----\n") ;
}

geNFS14_SpecialFCCOnSelectedMeshes;