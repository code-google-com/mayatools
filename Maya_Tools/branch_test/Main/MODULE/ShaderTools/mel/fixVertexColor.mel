global proc boltSCV.fixVertexColours()
{
	//fix crazy (20gb+) memory use... despite alread using the -nun flag.
	undoInfo -state on -infinity off -length 200;
	undoInfo -state off;
		
	string $objList[] = `ls -type mesh`;
	//$objList = boltShapesToTransformsNoPath($objList);
	//$objList = stringArrayRemoveDuplicates($objList);
	
	for ($obj in $objList)
	{
		//print "\n"; print $obj; 
		
		int $vertCounts[] = `polyEvaluate -vertex $obj`;
		int $vertCount = $vertCounts[0];
		//get num of verts
				
		int $fixFlag = 0;
		int $fixFlagRGB = 0;
		
		//FIX FOR 2013 - can't handle lack of colour set
		string $colourSets[] = `polyColorSet -q -currentColorSet $obj`;
		if ($colourSets[0] != "")		
		{
			
			for ( $v = 0; $v < $vertCount; $v++ )
			//for each vert
			{
						
				float $vertA[] 	 = `polyColorPerVertex -q -a -nun ($obj + ".vtx[" + $v +"]")`;
				//get alpha
						
				if ($vertA[0] > 1)
				{
					polyColorPerVertex -a 1 -nun ($obj + ".vtx[" + $v +"]");
					$fixFlag ++;
					$vertA[0] = 1;
				}
				if ($vertA[0] < 0)
				{
					polyColorPerVertex -a 0 -nun ($obj + ".vtx[" + $v +"]");
					$fixFlag ++;
					$vertA[0] = 0;
				}
				//cap this value if necessary.
			
			
				float $vertRGB[] 	 = `polyColorPerVertex -q -rgb -nun ($obj + ".vtx[" + $v +"]")`;
				//get RGB
				int $rgbChanged = 0;
				for ($i = 0; $i < 3; $i++)
				{
					if ($vertRGB[$i] > 1)
					{
						$vertRGB[$i] = 1;
						$rgbChanged = 1;
					}
					if ($vertRGB[$i] < 0)
					{
						$vertRGB[$i] = 0;
						$rgbChanged = 1;
					}
				}
				if ($rgbChanged == 1)
				{
					$fixFlagRGB ++;
					polyColorPerVertex -rgb $vertRGB[0] $vertRGB[1] $vertRGB[2] -a $vertA[0] -nun ($obj + ".vtx[" + $v +"]");
				}
				//only update vert colour if necessary.
			}
		}
				
		if ($fixFlag != 0)
		{
			print ("\n" + $fixFlag + " vertex alphas fixed on " + $obj);
		}
		if ($fixFlagRGB != 0)
		{
			print ("\n" + $fixFlagRGB + " vertex RGBs fixed on " + $obj);
		}
		
		
	}
	
	undoInfo -state on -infinity off -length 200;
	
	print "\nVertex colour fixes complete\n"; 
}